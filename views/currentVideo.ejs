<%- include('./partials/header.ejs') %>
<link rel="stylesheet" href="/stylesheets/player.css">

<section class="flex w-full flex-col">

  <div class="video-container paused w-full" data-volume-level="high">
    <video id="streamed-video" src="" controls class="w-full object-cover">
      <!-- Fallback content for browsers that don't support HTML5 video -->
      Your browser does not support the video tag.
    </video>


  </div>

  <video id="streamed-video" src="/stream/48372d11bb2040430212e15d5100f870" controls preload="metadata" class="w-full object-cover">
    <!-- Fallback content for browsers that don't support HTML5 video -->
    Your browser does not support the video tag.
  </video>


  <script defer>
    const videoPlayer = document.querySelector('video');
    let start = 0; // Initial start position for fetching chunks
    const chunkSize = 40 * 1024 * 1024; // Chunk size in bytes (1MB)
    const filename = "48372d11bb2040430212e15d5100f870"

    async function fetchAndAppendChunk() {
      const response = await fetch(`/stream/${filename}`, {
        headers: {
          Range: `bytes=${start}-${start + chunkSize}` // Request a specific chunk range
        }
      });

      if (response.ok) {
        console.log(response)
        const chunk = new Blob([await response.blob()]); // Convert chunk data to Blob
        videoPlayer.src = URL.createObjectURL(chunk); // Set the Blob URL as video source
        start += chunkSize; // Update start position for the next chunk
      } else {
        console.error('Failed to fetch chunk:', response.status);
      }
    }

    videoPlayer.addEventListener('timeupdate', () => {
      // Check if there are buffered ranges
      if (videoPlayer.buffered.length > 0) {
        // If the videoPlayer is close to the end of the currently buffered chunk, fetch the next chunk
        if (videoPlayer.currentTime >= videoPlayer.buffered.end(0) - 10) {
          fetchAndAppendChunk();
        }
      }
    });


    // Initial fetch to start streaming
    fetchAndAppendChunk();
  </script>





  <div class="text flex-col gap-2 px-3">
    <h1>Lorem ipsum dolor sit, amet consectetur adipisicing elit. Itaque beatae explicabo deserunt sunt culpa quibusdam?</h1>
    <p class="opacity-50 truncate">Lorem ipsum dolor sit amet consectetur, adipisicing elit. Perspiciatis voluptatum atque obcaecati cupiditate, suscipit asperiores numquam totam, voluptates culpa alias odio aut sequi commodi dolores dolorem dolorum pariatur ducimus quisquam tempora nemo voluptatem adipisci beatae architecto aliquam! Non, similique tempore?</p>
  </div>

</section>

<!-- <script src="/javascripts/player.js"></script> -->
<%- include('./partials/footer.ejs') %>